// <auto-generated />
using ManyToManyExamples.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ManyToManyExamples.Migrations
{
    [DbContext(typeof(ManyToManyContext))]
    partial class ManyToManyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-rc.2.20475.6");

            modelBuilder.Entity("ManyToManyExamples.Models.Course", b =>
                {
                    b.Property<string>("CourseCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("Abbreviation")
                        .HasColumnType("TEXT");

                    b.Property<int>("ECTS")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Semester")
                        .HasColumnType("INTEGER");

                    b.HasKey("CourseCode");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("ManyToManyExamples.Models.Student", b =>
                {
                    b.Property<int>("StudentNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.HasKey("StudentNum");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ManyToManyExamples.Models.StudentCourse", b =>
                {
                    b.Property<int>("StudentNum")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CourseCode")
                        .HasColumnType("TEXT");

                    b.HasKey("StudentNum", "CourseCode");

                    b.HasIndex("CourseCode");

                    b.ToTable("StudentCourse");
                });

            modelBuilder.Entity("ManyToManyExamples.Models.StudentCourse", b =>
                {
                    b.HasOne("ManyToManyExamples.Models.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManyToManyExamples.Models.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentNum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ManyToManyExamples.Models.Course", b =>
                {
                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("ManyToManyExamples.Models.Student", b =>
                {
                    b.Navigation("StudentCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
